---
- name: "Get system's current release on trusty"
  shell: uname -r
  register: uname
  when: ansible_distribution_release == "trusty"

- name: "Ensure linux-image-extra dependencies are installed on ubuntu trusty systems"
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - "linux-image-extra-{{ uname.stdout }}"
    - linux-image-extra-virtual
  become: yes
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'trusty'

- name: "Ensure packages to allow apt to use a repository over HTTPS are installed"
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
  become: yes

#- name: Ensure python-requests is installed
#  pip:
#    name: requests[security]
#    state: present
#  become: yes
#
#- name: "Add docker gpg key"
#  apt_key:
#    url: https://download.docker.com/linux/ubuntu/gpg
#    state: present
#    validate_certs: no
#  become: yes

- name: Download docker repo gpg key # Doesn't work w/ get_url :(_
  shell: "curl -fsSL -o /tmp/docker_gpg_key.gpg https://download.docker.com/linux/ubuntu/gpg"
  args:
    warn: false

- name: Install docker gpg key
  apt_key:
    file: /tmp/docker_gpg_key.gpg
    state: present
  become: yes

- name: Get lsb_release -cs command return
  shell: lsb_release -cs
  register: lsb_release

- name: "Add docker-ce ubuntu apt repo"
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ lsb_release.stdout }} stable"
    state: present
  become: yes

- name: "Ensure docker is installed"
  action: >
    {{ ansible_pkg_mgr }} name=docker-ce state=present update_cache=yes
  become: yes
